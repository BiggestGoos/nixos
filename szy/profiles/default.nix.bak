{ lib, ... }:
let

	part =
	{ ... }:
	{

		options = {

			name = lib.mkOption {
				type = lib.types.string;
			};

			imports = lib.mkOption {
				type = lib.types.listOf lib.types.path;
				default = [ ];
			};

		};

	};

	branch = 
	{ config, ... }:
	{
		options = {

			parts = lib.mkOption {

				type = lib.types.listOf (lib.types.submoduleWith { modules = [ part ]; });
				default = { };

			};

			name = lib.mkOption {
				type = lib.types.string;
				default = 
				let
					names = (builtins.map (part: part.name) config.parts);
					name = (builtins.concatStringsSep "-" names);
				in
				name;
			};

		};

	};

	base =
	{ ... }:
	{

		options = {

			branches = lib.mkOption {
				type = lib.types.listOf (lib.types.submoduleWith { modules = [ branch ]; });
				default = [ ];
			};

		};

	};

in
{

	options.profiles = {

		bases = lib.mkOption {
			#type = lib.types.attrsOf (lib.types.submoduleWith { modules = [ ({ config, ... }: { options = { test = lib.mkOption { type = lib.types.int; default = 5; }; name = lib.mkOption { type = lib.types.string; default = "name" + (builtins.toString config.test); }; }; }) ]; });
			type = lib.types.attrsOf (lib.types.submoduleWith { modules = [ base ]; });
		};

	};

	/*config = {

		profiles.bases.gxf.branches = [
			{
				parts = [
					{
						name = "hyprland";
					}
					{
						name = "light_theme";
					}
				];
			}
		];

/*
		profiles.bases.gfx.test = 9999;
		profiles.bases.gfx.name = "test";

	};
*/
}
